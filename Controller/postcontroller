<?php

namespace App\http\Requests;

namespace App\Http\Controllers;

use App\Http\Requests\createpostrequest;
use Illuminate\Http\Request;
use App\Models\Post;


class postcontroller extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        $posts = Post::latest()->get(); //go to post.php for latest(); 
        //return $posts;//retrive all data from post table in array 
        //  return redirect('/posts');
        return view('posts.index', compact('posts'));
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        return view('posts.create'); //fetch posts/create.blade.php
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(createpostrequest $request)
    {
        //return $request->all(); //to showcase the input as array list
        //return $request->get('title'); //to fetch only title
        //Post::create($request->all());

        /* $this->validate($request, [

            'title' => 'required',
            'body' => 'required'
        ]);//manually forming program to validate*/

        $input = $request->all();

        if ($file = $request->file('file')) {

            $name = $file->getClientOriginalName();
            $file->move('images', $name);
            $input['path'] = $name;

            Post::create($input);
        }





        /* $file = $request->file('file');
        echo "<br>";
        echo $file->getClientOriginalName();
        echo "<br>";
        echo $file->getSize();



        $post = new Post;
        $post->title = $request->title;
        $post->save(); */
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        $post = Post::findOrFail($id);
        return view('posts.show', compact('post'));

        // return "this is the show method" . $id;
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        $post = Post::findOrFail($id);
        return view('posts.edit', compact('post'));
    }


    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
        $post = Post::findOrFail($id);
        $post->update($request->all());
        echo "record edited";
        return redirect(route('posts.index'));
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        $post = Post::findOrFail($id);
        // $post= Post::where($id)->delete();
        $post->delete($id);

        return redirect('/posts');
        //  return "i am ready to destroy you" . $id;
    }

    public function contact()
    {
        $people = ['keya', 'arohi', 'rudra'];
        return view('contact', compact('people'));
    }

    public function set_post($id, $name)
    {
        //return view('post')->with('id', $id);
        return view('post', compact('id', 'name'));
    }
}
